[package]
name = "clash-lib"
repository = { workspace = true }
version = { workspace = true }
edition = { workspace = true }

[features]
default = ["zero_copy", "aws-lc-rs"]

aws-lc-rs = [
    "dep:aws-lc-rs",
    "rustls/aws-lc-rs",
    "watfaq-rustls/aws-lc-rs",
    "quinn-proto/rustls-aws-lc-rs",
    "watfaq-dns/aws-lc-rs",
    "russh/aws-lc-rs",
    "boringtun/aws-lc-rs"
]
ring = [
    "rustls/ring",
    "watfaq-rustls/ring",
    "quinn-proto/ring",
    "watfaq-dns/ring",
    "russh/ring",
    "boringtun/ring"
]

internal = []
# Protos
shadowsocks = ["dep:shadowsocks"]
tuic = ["dep:tuic", "dep:tuic-quinn", "dep:register-count"]
ssh = ["dep:russh", "dep:dirs", "dep:totp-rs"]
onion = ["dep:arti-client", "dep:tor-rtcompat", "arti-client/onion-service-client"]
shadowquic = ["dep:shadowquic"]
wireguard = ["dep:boringtun", "dep:smoltcp"]
tproxy = ["tun"]
tun = [
    "dep:tun-rs",
    "dep:watfaq-netstack",
    "dep:smoltcp",
]
redir = []
zero_copy = []
bench = ["dep:criterion"]
tracing = ["tokio/tracing", "dep:tracing-opentelemetry", "dep:tracing-chrome", "dep:opentelemetry", "dep:opentelemetry-otlp", "dep:opentelemetry_sdk", "dep:opentelemetry-semantic-conventions"]

[dependencies]
# Async
tokio = { version = "1", features = ["full"] }
tokio-util = { version = "0.7", features = ["net", "codec", "io", "compat"] }
futures = "0.3"
async-recursion = "1"
async-trait = "0.1"
hyper = { version = "1", features = ["http1", "http2", "client", "server"] }
hyper-util = "0.1"

# Network proto
http = { version = "1" }
http-body-util = "0.1.3"
socket2 = { version = "0.6", features = ["all"] }
tokio-tungstenite = "0.28.0"

# TLS
tokio-rustls = { version = "0.26", default-features = false, features = ["logging", "tls12"] }
hyper-rustls = { version = "0.27", default-features = false, features = ["http1", "http2"] }
rustls = { version = "0.23", default-features = false }
webpki-roots = "1.0"

# shadow-tls
tokio-watfaq-rustls = { git = "https://github.com/Watfaq/tokio-rustls.git", rev = "638db32084d7ecf9c2660847b55d48d1186b4055", default-features = false, features = ["logging", "tls12"] }
watfaq-rustls = { git = "https://github.com/Watfaq/rustls.git", rev = "4cae3aa2e84ea29d8a74b495793773bdb0a72206", default-features = false }

# Error handing & logging
thiserror = "2"
anyhow = "1"

# logging
time = { version = "=0.3", features = ["macros", "local-offset"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "local-time"] }
tracing-appender = { version = "0.2"}
tracing-log = "0.2"

tracing-chrome = { version = "0.7", optional = true }
opentelemetry = { version = "0.31", optional = true }
opentelemetry-otlp = { version = "0.31", optional = true }
opentelemetry_sdk = { version = "0.31", optional = true, features = ["rt-tokio"] }
tracing-opentelemetry = { version = "0.32", optional = true }
opentelemetry-semantic-conventions = { version = "0.31", optional = true, features = ["semconv_experimental"] }

# Data structures
url = "2"
bytes = "1"
ipnet = "2"
regex = "1"
byteorder = "1"
lru_time_cache = "0.11"
uuid = { version = "1", features = ["v4", "fast-rng", "macro-diagnostics", "serde"] }
network-interface = { version = "2" }
base64 = "0.22"
zstd = "0.13.3"
portable-atomic = { version = "1", features = ["serde"] }

h2 = "0.4"
prost = "0.14"
tower = { version = "0.5", features = ["util"] }
libc = "0.2"

ip_network_table-deps-treebitmap = "0.5"

# Algorithms
crc32fast = "1"
hmac = "0.12"
sha1 = "0.10"
sha2 = "0.10"
md-5 = "0.10"
chacha20poly1305 = "0.10"
aead = { version = "0.5", features = ["std"] }
aes = "0.8"
aes-gcm = "0.10"
cfb-mode = "0.8"
const-fnv1a-hash = "1"

filetime = "0.2"
axum = { version = "0.8", features = ["ws"] }
tower-http = { version = "0.6", features = ["fs", "trace", "cors"] }
chrono = { version = "0.4", features = ["serde"] }

# TUN
tun-rs = { version = "2", features = ["async", "async_framed"], optional = true }
watfaq-netstack = { path = "../clash-netstack", optional = true }
smoltcp = { version = "0.12", default-features = false, features = ["std", "log", "medium-ip", "proto-ipv4", "proto-ipv6", "socket-udp", "socket-tcp"], optional = true, git = "https://github.com/smoltcp-rs/smoltcp.git", rev = "ac32e64" }

# WireGuard
boringtun = { version = "0.1.0", git = "https://github.com/Watfaq/boring-noise.git", rev = "e8a17ec", package = "boring-noise", optional = true, default-features = false }

serde = { version = "1", features = ["derive"] }
serde_yaml = "0.9"
serde_json = "1"
erased-serde = "0.4"


# Macro Magic
educe = "0.6"

# DNS
watfaq-dns = { path = "../clash-dns", default-features = false }
hickory-client = { version = "0.25", default-features = false }
hickory-resolver = { version = "0.25", default-features = false }
hickory-proto = { version = "0.25", default-features = false }

dhcproto = "0.14"
ring-compat = { version = "0.8", features = ["aead"] }

rand = "0.9"
tracing = "0.1"

shadowsocks = { version = "1.23", optional = true, features = ["aead-cipher-2022", "stream-cipher"] }
maxminddb = "0.26"
public-suffix = "0.1"
murmur3 = "0.5"

arti-client = { version = "0.34", optional = true, default-features = false, features = ["tokio", "rustls", "static-sqlite"] }
tor-rtcompat = { version = "0.34", optional = true, default-features = false }

# tuic
tuic = { tag = "v1.5.2", optional = true, git = "https://github.com/Itsusinn/tuic.git" }
tuic-quinn = { tag = "v1.5.2", optional = true, git = "https://github.com/Itsusinn/tuic.git" }
register-count = { version = "0.1", optional = true }

quinn = { version = "0.11", default-features = false, features = ["futures-io", "runtime-tokio", "rustls"] }

# hysteria2
h3 = "0.0.8"
h3-quinn = "0.0.10"
quinn-proto = { version = "0.11.13", default-features = false }
blake2 = "0.10.6"
digest = "0.10.7"

console-subscriber = { git = "https://github.com/tokio-rs/console.git" }
criterion = { version = "0.7", features = ["html_reports", "async_tokio"], optional = true }
memory-stats = "1.0.0"

# ssh
russh = { version = "0.54", default-features = false, features = ["async-trait"], optional = true }
dirs = { version = "6.0", optional = true }
totp-rs = { version = "^5.7", features = ["serde_support"], optional = true }

# shadowquic
shadowquic = { version = "^0.2", optional = true, git = "https://github.com/spongebob888/shadowquic" }

# experimental
downcast-rs = "2.0"

# workaround for https://github.com/cross-rs/cross/issues/16
aws-lc-rs = { version = "1", default-features = false, optional = true, features = ["bindgen"] }

[dev-dependencies]
tempfile = "3.23"
mockall = "0.13.1"
tokio-test = "0.4.4"
axum-macros = "0.5.0"
bollard = "0.19"
serial_test = "3.2"
env_logger = "0.11"
# donnot change the version, russh is not compatible with the latest version of rand_core
rand_chacha = "=0.3"
httpmock = "0.8.2" # TODO replace with wiremock
tracing-test = "0.2"
http-body-util = "0.1"

[build-dependencies]
prost-build = "0.14"

[target.'cfg(unix)'.dependencies]
hyperlocal = { version = "0.9", features = ["client"] }

[target.'cfg(target_os="linux")'.dependencies]
unix-udp-sock = { git = "https://github.com/Watfaq/unix-udp-sock.git", rev = "847c80b519f0fd8cff5c887ae708429897d08671" }

[target.'cfg(macos)'.dependencies]
security-framework = "3.5.1"

[target.'cfg(target_os="ios")'.dependencies]
tracing-oslog = "0.3"

[target.'cfg(windows)'.dependencies]
windows = { version = "0.62", features = [
    "Win32_Networking_WinSock",
    "Win32_Foundation",
    "Win32_NetworkManagement_Rras",
    "Win32_NetworkManagement_IpHelper",
    "Win32_NetworkManagement_Ndis"
] }
